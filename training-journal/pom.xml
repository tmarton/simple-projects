<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.marton</groupId>
    <artifactId>training-journal</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>


    <name>Personal training journal</name>
    <description>Personal training journal</description>

    <properties>
        <version.picketlink>2.7.0.Final</version.picketlink>
    </properties>

    <!--<properties>-->
        <!--&lt;!&ndash; Explicitly declaring the source encoding eliminates the following-->
            <!--message: &ndash;&gt;-->
        <!--&lt;!&ndash; [WARNING] Using platform encoding (UTF-8 actually) to copy filtered-->
            <!--resources, i.e. build is platform dependent! &ndash;&gt;-->
        <!--<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
        <!--&lt;!&ndash; Timestamp format for the maven.build.timestamp property &ndash;&gt;-->
        <!--&lt;!&ndash; You can reference property in pom.xml or filtered resources (must-->
            <!--enable third-party plugin if using Maven < 2.1) &ndash;&gt;-->
        <!--<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>-->
        <!--&lt;!&ndash; Specify the JBoss AS directory to be the JBOSS_HOME environment variable &ndash;&gt;-->
        <!--<jboss.home>${env.JBOSS_HOME}</jboss.home>-->
    <!--</properties>-->

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-spec-api</artifactId>
                <version>8.1.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--JSON mapper-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.5.4</version>
        </dependency>

        <!-- JAX_RS API -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>

        <!--JBOSS contains JAX_RS implementation and it collides with specified dependency -->
        <!--<dependency>-->
            <!--<groupId>org.jboss.resteasy</groupId>-->
            <!--<artifactId>resteasy-jaxrs</artifactId>-->
            <!--<version>3.0.11.Final</version>-->
        <!--</dependency>-->

        <!-- Hibernate dependencies -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.5.6-Final</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.3.Final</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Picketlink dependencies -->
        <dependency>
            <groupId>org.picketlink</groupId>
            <artifactId>picketlink</artifactId>
            <scope>compile</scope>
            <version>${version.picketlink}</version>
        </dependency>

        <!-- PicketLink Simple Schema for IDM JPA Identity Store. This is just a simple and specific schema that maps
        all types provided by PicketLink IDM Basic Model. Eg.: User, Role and Group types.   -->
        <dependency>
            <groupId>org.picketlink</groupId>
            <artifactId>picketlink-idm-simple-schema</artifactId>
            <scope>compile</scope>
            <version>${version.picketlink}</version>
        </dependency>

        <!-- Picket JSON Dependency. It provides an API to build JWT and JOSE based tokens. We must define it separately because it depends
        on JSON-P (JSR-353) which is a JEE7 library. EAP supports JEE6.-->
        <dependency>
            <groupId>org.picketlink</groupId>
            <artifactId>picketlink-json</artifactId>
            <scope>compile</scope>
            <version>${version.picketlink}</version>
        </dependency>

        <!-- Websocket Dependency -->
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.1</version>
        </dependency>

        <!--Util dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0</version>
        </dependency>


        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>1.1.7.Final</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-api</artifactId>
            <version>1.1.7.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.5.0</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run
                just unit tests based on a custom pattern -->
            <!-- Seperate profiles are provided for running all tests, including Arquillian
                tests that execute in the specified container -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.3</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- We add the JBoss repository as we need the JBoss AS connectors for
                Arquillian -->
            <repositories>
                <repository>
                    <id>jboss-public-repository</id>
                    <name>JBoss Repository</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public</url>
                    <!-- These optional flags are designed to speed up your builds by reducing
                        remote server calls -->
                    <releases>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <pluginRepositories>
                <pluginRepository>
                    <id>jboss-public-repository</id>
                    <name>JBoss Repository</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public</url>
                    <releases>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>

            <!-- An optional Arquillian testing profile that executes tests in your
                JBoss AS instance -->
            <!-- This profile will start a new JBoss AS instance, and execute the
                test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-jbossas-managed -->
            <id>arq-jbossas-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>8.2.1.Final</version>
                    <scope>test</scope>
                </dependency>

            </dependencies>
        </profile>

        <profile>
            <!-- We add the JBoss repository as we need the JBoss AS connectors for
                Arquillian -->
            <repositories>
                <!-- The JBoss Community public repository is a composite repository
                    of several major repositories -->
                <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
                <repository>
                    <id>jboss-public-repository</id>
                    <name>JBoss Repository</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public</url>
                    <!-- These optional flags are designed to speed up your builds by reducing
                        remote server calls -->
                    <releases>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <pluginRepositories>
                <pluginRepository>
                    <id>jboss-public-repository</id>
                    <name>JBoss Repository</name>
                    <url>http://repository.jboss.org/nexus/content/groups/public</url>
                    <releases>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>

            <!-- An optional Arquillian testing profile that executes tests in a remote
                JBoss AS instance -->
            <!-- Run with: mvn clean test -Parq-jbossas-remote -->
            <id>arq-jbossas-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>8.2.1.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

</project>